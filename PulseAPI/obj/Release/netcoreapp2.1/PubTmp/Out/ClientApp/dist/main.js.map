{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/login-form/login-form.component.html","webpack:///./src/app/account/login-form/login-form.component.scss","webpack:///./src/app/account/login-form/login-form.component.ts","webpack:///./src/app/account/login-real/login-real.component.html","webpack:///./src/app/account/login-real/login-real.component.scss","webpack:///./src/app/account/login-real/login-real.component.ts","webpack:///./src/app/account/registration-account/registration-account.component.html","webpack:///./src/app/account/registration-account/registration-account.component.scss","webpack:///./src/app/account/registration-account/registration-account.component.ts","webpack:///./src/app/app-material/app-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/certificate-validator/certificate-validator.component.html","webpack:///./src/app/certificate-validator/certificate-validator.component.ts","webpack:///./src/app/certificate-validator/certificate-validator.scss","webpack:///./src/app/certificate-validator/dialog-overview-example-dialog.html","webpack:///./src/app/counter/counter.component.html","webpack:///./src/app/counter/counter.component.ts","webpack:///./src/app/create-certificate/create-certificate.component.ts","webpack:///./src/app/create-certificate/create-certificate.html","webpack:///./src/app/create-certificate/create-certificate.scss","webpack:///./src/app/fetch-data/fetch-data.component.html","webpack:///./src/app/fetch-data/fetch-data.component.scss","webpack:///./src/app/fetch-data/fetch-data.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/layouts/home-layout.component.ts","webpack:///./src/app/layouts/home.layout.component.html","webpack:///./src/app/layouts/home.layout.component.scss","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/services/badge.count.service.ts","webpack:///./src/app/transactions/app-transactions.component.html","webpack:///./src/app/transactions/app-transactions.component.scss","webpack:///./src/app/transactions/dialog-overview-transaction-dialog.html","webpack:///./src/app/transactions/dialog-overview-transaction-dialog.scss","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule }  from '@angular/forms';\r\n\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { LoginRealComponent } from './login-real/login-real.component';\r\nimport { RegisterAccountComponent } from './registration-account/registration-account.component';\r\nimport { AppMaterialModule } from '../app-material/app-material.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule, AppMaterialModule\r\n  ],\r\n  declarations: [\r\n    RegisterAccountComponent,\r\n    LoginRealComponent,\r\n    LoginFormComponent]\r\n})\r\nexport class AccountModule { }\r\n","module.exports = \"<!-- <div class=\\\"alert alert-info\\\">\\r\\n  Username: rolteanu<br />\\r\\n  Password: test\\r\\n</div> -->\\r\\n<mat-toolbar style=\\\"box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 3px rgba(0,0,0,0.08);position: fixed;z-index: 1;\\\">\\r\\n\\r\\n    <!-- This fills the remaining space of the current row -->\\r\\n    <span class=\\\"fill-space\\\"></span>\\r\\n  \\r\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-right: 10px\\\" routerLink=\\\"/register\\\"\\r\\n    (click)=\\\"onLogin()\\\"\\r\\n     routerLinkActive=\\\"active\\\">Login</button>\\r\\n\\r\\n     <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/register\\\"\\r\\n    (click)=\\\"onRegister()\\\"\\r\\n     routerLinkActive=\\\"active\\\">Register</button>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n<!-- \\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"color-overlay\\\"></div>\\r\\n  </div> -->\\r\\n\\r\\n<img  style = \\\"\\r\\nmin-width: 100%; \\r\\nobject-fit: cover;\\r\\nmax-height: 950px;\\\" src=\\\"http://whitehousemarketinginc.com/whmktwp/wp-content/uploads/2015/03/bigstock-Two-business-people-discussing-65366809.jpg\\\"/>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  display: block;\\n  left: 35%;\\n  text-align: center;\\n  position: absolute; }\\n\\n.example-full-width {\\n  width: 100%;\\n  text-align: center; }\\n\\n.title-style {\\n  text-align: center;\\n  margin-top: 230px;\\n  margin-right: 50px; }\\n\\n.no-hover-effect.mat-button.mat-primary .mat-button-focus-overlay,\\n.no-hover-effect.mat-button.mat-accent .mat-button-focus-overlay,\\n.no-hover-effect.mat-button.mat-warn .mat-button-focus-overlay {\\n  background-color: transparent; }\\n\\n.fill-space {\\n  flex: 1 1 auto; }\\n\\n.container {\\n  background: #000 url('bigstock-two-business-people-discussing-65366809.jpg');\\n  color: #fff;\\n  width: 100%;\\n  height: 600px;\\n  -o-object-fit: cover;\\n     object-fit: cover; }\\n\\n.color-overlay {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  opacity: .6; }\\n\\nh1 {\\n  font-family: 'Pacifico', cursive;\\n  font-size: 60px; }\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss']\r\n})\r\n\r\nexport class LoginFormComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n\r\n  constructor(\r\n      private formBuilder: FormBuilder,\r\n      private route: ActivatedRoute,\r\n      private router: Router,\r\n      private authenticationService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n      this.loginForm = this.formBuilder.group({\r\n          username: ['', Validators.required],\r\n          password: ['', Validators.required]\r\n      });\r\n\r\n      // reset login status\r\n      this.authenticationService.logout();\r\n\r\n      // get return url from route parameters or default to '/'\r\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n\r\n      // stop here if form is invalid\r\n      if (this.loginForm.invalid) {\r\n          return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n          .subscribe(\r\n              result => {\r\n                if (result.state == 1) {\r\n                    this.router.navigate([\"/\"]);\r\n                } else {\r\n                    alert(result.msg);\r\n                }\r\n              },\r\n              error => {\r\n                  this.error = error;\r\n                  this.loading = false;\r\n              });\r\n  }\r\n\r\n  onRegister(){\r\n    this.router.navigate([\"/register\"]);\r\n}\r\n\r\nonLogin(){\r\n    this.router.navigate([\"/login-real\"]);\r\n}\r\n}\r\n","module.exports = \"<div class=\\\"example-container\\\">\\r\\n        <!-- <mat-form-field>\\r\\n                <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n        </mat-form-field>-->\\r\\n        <mat-card>\\r\\n            <mat-card-title>Login</mat-card-title>\\r\\n            <div class=\\\"form-container\\\">\\r\\n            <mat-card-content class =\\\"mat-card-content\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input [(ngModel)]=\\\"email\\\" type=\\\"text\\\"\\r\\n                 placeholder=\\\"Email\\\"\\r\\n                 aria-label=\\\"Number\\\"\\r\\n                 matInput>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\"\\r\\n                [type]=\\\"hide ? 'password' : 'text'\\\"\\r\\n                 placeholder=\\\"password\\\" aria-label=\\\"Number\\\" matInput>\\r\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n        <img class=\\\"img-style\\\" src=\\\"https://ssl.gstatic.com/accounts/signup/glif/account.svg\\\"/>\\r\\n    </div>\\r\\n         <mat-card-actions>\\r\\n         <button style=\\\"margin-left: 12px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\r\\n         <button mat-button color=\\\"primary\\\" routerLink=\\\"/register\\\"\\r\\n  (click)=\\\"onCancel()\\\"\\r\\n   routerLinkActive=\\\"active\\\">Cancel</button>\\r\\n              </mat-card-actions>\\r\\n              <br/>\\r\\n              <mat-spinner *ngIf=\\\"loading\\\" [diameter]=\\\"40\\\"></mat-spinner>\\r\\n              <mat-error *ngIf=\\\"showError\\\">\\r\\n                Username or password incorect\\r\\n                  </mat-error>\\r\\n                </mat-card>\\r\\n               \\r\\n</div>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  display: block;\\n  left: 35%;\\n  text-align: center;\\n  position: absolute; }\\n\\n.example-full-width {\\n  width: 100%;\\n  text-align: center; }\\n\\n.title-style {\\n  text-align: center;\\n  margin-top: 230px;\\n  margin-right: 50px; }\\n\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 800px;\\n  margin-left: 500px;\\n  margin-top: 100px; }\\n\\n.mat-card-content {\\n  float: left;\\n  margin-top: 100px; }\\n\\n.img-style {\\n  width: 300px;\\n  float: right; }\\n\\nmat-icon {\\n  cursor: pointer; }\\n\\n.form-container {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  display: flow-root !important;\\n  position: relative;\\n  text-align: left; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 450px; }\\n\"","import { Component, OnInit,OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login-real',\r\n    templateUrl: './login-real.component.html',\r\n    styleUrls: ['./login-real.component.scss']\r\n  })\r\n\r\n\r\n  export class LoginRealComponent {\r\n\r\n    private email:string;\r\n    private password:string;\r\n    private  loading = false;\r\n    private showError = false;\r\n    private hide = true;\r\n    private error = \"\";\r\n    constructor(private router: Router,private authenticationService: AuthService){}\r\n\r\n    private onCancel(){\r\nthis.router.navigate(['/']);\r\n    }\r\n\r\n    private login(){\r\n        this.loading=true;\r\n        this.showError = false;\r\n        this.authenticationService.login(this.email, this.password)\r\n        .subscribe(\r\n            result => {\r\n              if (result.state == 1) {\r\n                  this.router.navigate([\"/\"]);\r\n              } else {\r\n                  alert(result.msg);\r\n              }\r\n            },\r\n            error => {\r\n                this.error = error;\r\n                this.loading = false;\r\n                this.showError = true;\r\n            });\r\n    }\r\n  }","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n        <span>Registration</span>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"example-container\\\">\\r\\n            <!-- <mat-form-field>\\r\\n                    <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n                  </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n            </mat-form-field>-->\\r\\n            <mat-card>\\r\\n                <mat-card-title>Create Account</mat-card-title>\\r\\n                <div class=\\\"form-container\\\">\\r\\n                <mat-card-content class =\\\"mat-card-content\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input [(ngModel)]=\\\"accountName\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" aria-label=\\\"Number\\\" matInput >\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <input [(ngModel)]=\\\"accountPassword\\\" type=\\\"password\\\"\\r\\n                    [type]=\\\"hide ? 'password' : 'text'\\\"\\r\\n                     placeholder=\\\"password\\\" aria-label=\\\"Number\\\" matInput >\\r\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n            <img class=\\\"img-style\\\" src=\\\"https://ssl.gstatic.com/accounts/signup/glif/account.svg\\\"/>\\r\\n        </div>\\r\\n             <mat-card-actions>\\r\\n             <button style=\\\"margin-left: 12px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"createAccount()\\\">Create Account</button>\\r\\n             <button mat-button color=\\\"primary\\\" routerLink=\\\"/register\\\"\\r\\n      (click)=\\\"onCancel()\\\"\\r\\n       routerLinkActive=\\\"active\\\">Cancel</button>\\r\\n                  </mat-card-actions>\\r\\n                  <br/>\\r\\n                      <mat-spinner *ngIf=\\\"loading\\\" [diameter]=\\\"40\\\"></mat-spinner>\\r\\n                    </mat-card>\\r\\n    </div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 800px;\\n  margin-left: 500px;\\n  margin-top: 100px; }\\n\\n.mat-card-content {\\n  float: left;\\n  margin-top: 100px; }\\n\\n.img-style {\\n  width: 300px;\\n  float: right; }\\n\\nmat-icon {\\n  cursor: pointer; }\\n\\n.form-container {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  display: flow-root !important;\\n  position: relative;\\n  text-align: left; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 450px; }\\n\"","\r\nimport { Component, OnInit,OnDestroy,Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, debounceTime, distinctUntilChanged, catchError } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-register-account',\r\n    templateUrl: './registration-account.component.html',\r\n    styleUrls: ['./registration-account.component.scss']\r\n  })\r\n\r\n  export class RegisterAccountComponent{\r\n\r\n    private accountName : string;\r\n    private accountPassword:string;\r\n    private hide = true;\r\n    private loading :boolean = false;\r\n    constructor(private router: Router,\r\n                private http: HttpClient,\r\n                @Inject('BASE_URL') private baseUrl: string){\r\n\r\n    }\r\n\r\n    public onCancel(){\r\n        this.router.navigate([\"/\"]);\r\n    }\r\n\r\n    public createAccount(){\r\n        let header = new HttpHeaders().set('Content-Type', 'application/json');\r\n        let options = { headers: header };\r\n        let body = JSON.stringify({ \"Email\": this.accountName, \"PasswordHash\": this.accountPassword });\r\n        this.loading = true;\r\n         this.http.post<any>(`${this.baseUrl}api/account/register`, body,options)\r\n            .subscribe(_ => {\r\n                this.loading = false;\r\n                let res = _;\r\n            },err => {\r\n                this.loading = false;\r\n                \r\n            });\r\n    }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatTreeModule\r\n} from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [],\r\n\r\n  exports: [\r\n    CdkTableModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n  \r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ],\r\n})\r\nexport class AppMaterialModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { LoginFormComponent } from './account/login-form/login-form.component';\nimport { LoginRealComponent } from './account/login-real/login-real.component';\nimport { RegisterAccountComponent } from './account/registration-account/registration-account.component';\nimport { HomeComponent } from './home/home.component';\nimport { HomeLayoutComponent } from './layouts/home-layout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreateCertificateComponent } from './create-certificate/create-certificate.component';\nimport { UsersComponent } from './users/users.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', component: HomeComponent,canActivate: [AuthGuard] },\n      {path:  'create-certificate', component : CreateCertificateComponent},\n      {path:  'users', component : UsersComponent}\n    ]\n  },\n  { path: 'login', component: LoginFormComponent},\n  {path: 'login-real',component : LoginRealComponent},\n  {path:'register', component : RegisterAccountComponent},\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes),FormsModule,ReactiveFormsModule ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet> \\r\\n\\r\\n<!-- <h2>\\r\\n        <a mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n                <mat-icon style=\\\"color: grey\\\">menu</mat-icon>\\r\\n            </a>\\r\\n            <p>Block Chain</p>\\r\\n</h2>\\r\\n<mat-drawer-container class=\\\"example-container\\\" autosize>\\r\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\r\\n      <button routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" style=\\\"margin-top: 20px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n        <mat-icon style=\\\"color: red\\\">home</mat-icon>\\r\\n      <b style=\\\"margin-left: 20px\\\">Home</b>\\r\\n      </button>\\r\\n    </mat-drawer>\\r\\n  \\r\\n    <div class=\\\"example-sidenav-content\\\">\\r\\n      <!-- <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\r\\n        Toggle sidenav\\r\\n      </button> -->\\r\\n      <!-- <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </mat-drawer-container> -->\\r\\n   \"","module.exports = \"@media (max-width: 767px) {\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\n  .body-content {\\n    padding-top: 50px; } }\\n\\n.example-container {\\n  border: 1px solid rgba(0, 0, 0, 0.5); }\\n\\n.mat-icon-button.small {\\n  width: 25px;\\n  height: 25px;\\n  color: red;\\n  line-height: 25px; }\\n\\n.mat-icon-button.small .mat-icon, .mat-icon-button.small .mat-icon-button i {\\n    line-height: 25px; }\\n\\n.mat-icon-button.small .mat-icon {\\n    width: 25px;\\n    height: 25px; }\\n\\n.mat-icon-button.small .material-icons {\\n    font-size: 25px; }\\n\\n.example-sidenav-content {\\n  display: flex;\\n  height: 1400px;\\n  align-items: flex-start;\\n  justify-content: flex-start; }\\n\\n.example-sidenav {\\n  padding: 20px;\\n  height: 100%; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { AccountModule } from './account/account.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomeLayoutComponent } from './layouts/home-layout.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AppMaterialModule } from './app-material/app-material.module';\r\nimport { CertificateValidatorComponent, FileNameDialogComponent } from './certificate-validator/certificate-validator.component';\r\nimport { TransactionsComponent, TransactionDetailsDialogComponent } from './transactions/transactions.component';\r\nimport { CreateCertificateComponent } from './create-certificate/create-certificate.component';\r\nimport { BadgeCountService } from './services/badge.count.service';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    HomeLayoutComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    CertificateValidatorComponent,\r\n    CreateCertificateComponent,\r\n    TransactionsComponent,\r\n    UsersComponent,\r\n    FileNameDialogComponent,\r\n    TransactionDetailsDialogComponent\r\n  ],\r\n  imports: [\r\n    AccountModule,\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    AppMaterialModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  entryComponents :[FileNameDialogComponent,TransactionDetailsDialogComponent],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    BadgeCountService\r\n  //   fakeBackendProvider,\r\n  //   {\r\n  //     provide: HTTP_INTERCEPTORS,\r\n  //     useClass: JwtInterceptor,\r\n  //     multi: true\r\n  // }\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    private tokeyKey = \"token\";\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.checkLogin()) {\n            return true;\n        } \n        else{\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n        }\n    }\n\n    public checkLogin(): boolean {\n        let token = sessionStorage.getItem('tokenKey');\n        return token != null;\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n    private tokeyKey = \"token\";\n    constructor(private http: HttpClient,@Inject('BASE_URL') private baseUrl: string) {}\n    \n    login(username: string, password: string) {\n        let header = new HttpHeaders().set('Content-Type', 'application/json');\n        let options = { headers: header };\n        let body = JSON.stringify({ \"Email\": username, \"PasswordHash\": password });\n        return this.http.put<AuthBearer>(`${this.baseUrl}api/account/login`, body,options)\n            .pipe(map((res:any) => {\n                let result = res;\n                // login successful if there's a jwt token in the response\n                if (result.state && result.state == 1) {\n                    sessionStorage.setItem('tokenKey', result.data.accesToken);\n                }\n                return result;\n            }));\n    }\n    private getLocalToken(): string {\n        return sessionStorage.getItem('tokenKey');\n    }\n\n    public isAdmin():Observable<boolean> {\n       return this.getUserInfo$().pipe(map((res:any) => {\n           return res.data.userName == \"rolteanu\" ? true:false;\n       }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        sessionStorage.clear();\n    }\n\n    public initAuthHeaders(): HttpHeaders {\n        let token = this.getLocalToken();\n        if (token == null) throw \"No token\";\n\n        let headers = new HttpHeaders()\n            .set('Content-Type', 'application/json')\n            .set(\"Authorization\", \"Bearer \" + token);\n        return headers;\n    }\n\n    public authGet$(url) {\n        let header = this.initAuthHeaders();\n        let options = { headers: header };\n        return this.http.get<any>(url, options).pipe(\n            debounceTime(200),\n            distinctUntilChanged(),\n            catchError(this.handleError<any>(\"authGet\")));\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n            console.error(`${operation} error: ${error.message}`);\n            return of(result as T);\n        };\n    }\n\n    public getUserInfo$() {\n        return this.authGet$(`${this.baseUrl}api/TokenAuth`);\n    }\n\n}\nexport interface AuthBearer{\n    state : number;\n    msg : string;\n    data : any;\n}\n","module.exports = \"<mat-card class=\\\"mat-card-style1\\\">\\r\\n  <mat-card-title>Validate Certificate By Certificate Identifier</mat-card-title>\\r\\n  <mat-card-header *ngIf=\\\"selectedCertificate !=null && selectedCertificate.id !=null\\\">\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title>Certificate Identifier</mat-card-title>\\r\\n      <mat-card-subtitle> {{selectedCertificate == null ? \\\"\\\" : selectedCertificate.id}}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input [(ngModel)]=\\\"selectedCertificate\\\" type=\\\"text\\\" placeholder=\\\"Certificate Identifier\\\" aria-label=\\\"Number\\\" matInput [matAutocomplete]=\\\"auto\\\">\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayCertificate\\\">\\r\\n        <mat-option *ngFor=\\\"let certificate of certificates\\\" [value]=\\\"certificate\\\">\\r\\n          {{certificate.id}}\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n    </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions align=\\\"center\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"validateCertificatebyId()\\\">\\r\\n        Validate\\r\\n </button>\\r\\n <mat-spinner *ngIf=\\\"isBusy\\\" [diameter]=\\\"40\\\"></mat-spinner>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\\r\\n  <mat-card class=\\\"mat-card-style\\\">\\r\\n    <mat-card-title>Validate Certificate By Vessel Name</mat-card-title>\\r\\n    <mat-card-header *ngIf=\\\"selectedShip !=null && selectedShip.id !=null\\\">\\r\\n        <div mat-card-avatar class=\\\"example-header-image1\\\"></div>\\r\\n        <mat-card-title>Vessel Name</mat-card-title>\\r\\n        <mat-card-subtitle> {{selectedShip == null ? \\\"\\\" : selectedShip.shipName}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <input [(ngModel)]=\\\"selectedShip\\\" type=\\\"text\\\" placeholder=\\\"Vessel Name\\\" aria-label=\\\"Number\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\r\\n        <mat-autocomplete #auto1=\\\"matAutocomplete\\\" [displayWith]=\\\"displayShipName\\\">\\r\\n          <mat-option *ngFor=\\\"let ship of ships\\\" [value]=\\\"ship\\\">\\r\\n            {{ship.shipName}}\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n      </mat-form-field>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions align=\\\"center\\\" >\\r\\n        <button mat-raised-button color=\\\"primary\\\" align=\\\"center\\\" (click)=\\\"validateCertificatebyVesselId()\\\">\\r\\n          Validate\\r\\n   </button>\\r\\n   <mat-spinner *ngIf=\\\"isBusy1\\\" [diameter]=\\\"40\\\"></mat-spinner>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { CertificateModel } from '../home/home.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ShipViewModel } from '../create-certificate/create-certificate.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { BadgeCountService } from '../services/badge.count.service';\r\n\r\n@Component({\r\n  selector: 'app-certificate-validator',\r\n  templateUrl: './certificate-validator.component.html',\r\n  styleUrls: ['./certificate-validator.scss']\r\n})\r\n\r\nexport class CertificateValidatorComponent {\r\n  private Title: string = \"\";\r\n  private certificates: any;\r\n  private isBusy:boolean = false;\r\n  private isBusy1:boolean = false;\r\n  private ships:ShipViewModel[];\r\n  private selectedCertificate : any;\r\n  private messageValidate:string;\r\n  private selectedShip : ShipViewModel;\r\n\r\n  constructor(private _http: HttpClient, @Inject('BASE_URL') private baseUrl: string,\r\n              private authService: AuthService,\r\n              private badgeCountService: BadgeCountService,\r\n              private route: ActivatedRoute, private dialog: MatDialog) {\r\n\r\n                let header = this.authService.initAuthHeaders();\r\n                let options = { headers: header };\r\n\r\n    this._http.get<CertificateModel[]>(`${baseUrl}api/certificate`,options).subscribe(result => {\r\n           this.certificates = result;\r\n         }, error => console.error(error));\r\n\r\n       this._http.get<ShipViewModel[]>(`${baseUrl}api/certificate/ships`,options).subscribe(result => {\r\n          this.ships = result;\r\n        }, error => console.log(error)); \r\n  }\r\n\r\n  displayCertificate =(item : any) => item.id;\r\n  displayShipName = (ship: ShipViewModel) =>`${ship.shipName}`;\r\n\r\n\r\n  public validateCertificatebyId(): void {\r\n\r\n    let body = new FormData();\r\n    body.append('certificateId', this.selectedCertificate.id);\r\n    this.isBusy = true;\r\n    this._http.post<boolean>(`${this.baseUrl}api/certificate/ValidateById`,body).subscribe(_ => {\r\n     this.messageValidate=  _ == true ? \"valid\": \"not valid\";\r\n     this.isBusy = false;\r\n      let dialogRef = this.dialog.open(FileNameDialogComponent,{\r\n        data:{\r\n          result :`Certificate is ${this.messageValidate}`\r\n        }\r\n      });\r\n      \r\n      let header = this.authService.initAuthHeaders();\r\n      let options = { headers: header };\r\n      \r\n      // this._http.get<number>(`${this.baseUrl}api/certificate/counttransaction`,options).subscribe(result => {\r\n      //     this.badgeCountService.totalTransactions.next(result);\r\n      // });\r\n    });\r\n  }\r\n  \r\n  public validateCertificatebyVesselId(): void{\r\n\r\n    let body = new FormData();\r\n    body.append('vesselId', this.selectedShip.id);\r\n    this.isBusy1 = true;\r\n    this._http.post<boolean>(`${this.baseUrl}api/certificate/ValidateByVesselId`,body).subscribe(_ => {\r\n      this.messageValidate=  _ == true ? \"valid\": \"not valid\";\r\n      this.isBusy1 = false;\r\n \r\n       let dialogRef = this.dialog.open(FileNameDialogComponent,{\r\n         data:{\r\n           result :`Certificate is ${this.messageValidate} for ${this.selectedShip.shipName}`\r\n         }\r\n       });\r\n\r\n       let header = this.authService.initAuthHeaders();\r\n       let options = { headers: header };\r\n       \r\n       this._http.get<number>(`${this.baseUrl}api/certificate/counttransaction`,options).subscribe(result => {\r\n           this.badgeCountService.totalTransactions.next(result);\r\n       });\r\n     });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-data-example-dialog',\r\n  templateUrl:'./dialog-overview-example-dialog.html'\r\n})\r\nexport class FileNameDialogComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n}\r\n\r\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  display: flow-root !important;\\n  position: relative;\\n  text-align: left; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.mat-card-style {\\n  margin-top: 100px; }\\n\\n.mat-card-style1 {\\n  margin-top: 50px; }\\n\\n.example-card {\\n  max-width: 400px; }\\n\\n.example-header-image {\\n  background-image: url(\\\"https://png.icons8.com/material/1600/certificate.png\\\");\\n  background-size: cover; }\\n\\n.example-header-image1 {\\n  background-image: url(\\\"https://png.pngtree.com/element_origin_min_pic/16/08/22/0957ba560723855.jpg\\\");\\n  background-size: cover; }\\n\"","module.exports = \"<h2 mat-dialog-title>{{data.result}}</h2>\"","module.exports = \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p>Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { map, tap, last, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-fetch-data',\r\n    templateUrl: './create-certificate.html',\r\n    styleUrls: ['./create-certificate.scss']\r\n  })\r\n\r\n  export class CreateCertificateComponent {\r\n      \r\n    public customers: CustomerViewModel[] = [];\r\n    public ships:ShipViewModel[] = [];\r\n    selectedCustomer : CustomerViewModel;\r\n    selectedShip : ShipViewModel;\r\n    selectedStartDate: Date;\r\n    selectedEndDate: Date;\r\n  @Input() text = 'Attach Document';\r\n      /** Name used in form which will be sent in HTTP request. */\r\n  @Input() param = 'file';\r\n  /** Target URL for file uploading. */\r\n  /** File extension that accepted, same as 'accept' of <input type=\"file\" />. By the default, it's set to 'image/*'. */\r\n  @Input() accept = 'image/*';\r\n  /** Allow you to add handler after its completion. Bubble up response text from remote. */\r\n  @Output() complete = new EventEmitter<string>();\r\n\r\n\r\n  private files: Array<FileUploadModel> = [];\r\n\r\n      constructor(private _http: HttpClient, @Inject('BASE_URL') private baseUrl: string,\r\n       private authService : AuthService){\r\n        _http.get<CustomerViewModel[]>(`${this.baseUrl}api/certificate/customers`).subscribe(result => {\r\n\r\n          this.customers = result;\r\n        }, error => console.log(error)); \r\n\r\n        _http.get<ShipViewModel[]>(`${this.baseUrl}api/certificate/ships`).subscribe(result => {\r\n          this.ships = result;\r\n        }, error => console.log(error)); \r\n\r\n      }\r\n\r\n      displayShipName = (ship:ShipViewModel) =>`${ship.shipName}`;\r\n\r\n      displayCustomer = (state:CustomerViewModel) => \r\n          `${state.firstName} ${state.lastName}`;\r\n\r\n      onClick() {\r\n        const fileUpload = document.getElementById('fileUpload') as HTMLInputElement;\r\n        fileUpload.onchange = () => {\r\n          for (let index = 0; index < fileUpload.files.length; index++) {\r\n            const file = fileUpload.files[index];\r\n            this.files.push({ data: file, state: 'in', inProgress: false, progress: 0, canRetry: false, canCancel: true });\r\n          }\r\n        // this.uploadFiles();\r\n        };\r\n        fileUpload.click();\r\n      }\r\n\r\n      private uploadFiles() {\r\n        const fileUpload = document.getElementById('fileUpload') as HTMLInputElement;\r\n        fileUpload.value = '';\r\n    \r\n        this.files.forEach(file => {\r\n          if (!file.inProgress) {\r\n            this.uploadFile(file);\r\n          }\r\n        });\r\n      }\r\n\r\n      private createCertificate(){\r\n       this.uploadFiles();\r\n      }\r\n\r\n      private createDateFormat(dateValue : Date) : string {\r\nvar day = dateValue.getDate();       // yields date\r\nvar month = dateValue.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)\r\nvar year = dateValue.getFullYear();  // yields year\r\n\r\n// After this construct a string with the above results as below\r\nvar time = day + \"/\" + month + \"/\" + year;\r\nreturn time;\r\n      }\r\n\r\n      private uploadFile(file: FileUploadModel) {\r\n        const fd = new FormData();\r\n        fd.append(\"CustomerIdentifier\",this.selectedCustomer.id);\r\n        fd.append(\"VesselIdentifier\",this.selectedShip.id);\r\n        fd.append(\"StartDate\",this.createDateFormat(this.selectedStartDate));\r\n        fd.append(\"EndDate\",this.createDateFormat(this.selectedEndDate));\r\n        fd.append(this.param, file.data);\r\n\r\n        const req = new HttpRequest('POST', `${this.baseUrl}api/certificate/upload`, fd, {\r\n          reportProgress: true,\r\n        });\r\n        \r\n        //this._http.post(this.target,fd);\r\n        \r\n        file.inProgress = true;\r\n         file.sub = this._http.request(req).pipe(\r\n          map(event => {\r\n            switch (event.type) {\r\n              case HttpEventType.UploadProgress:\r\n                file.progress = Math.round(event.loaded * 100 / event.total);\r\n                break;\r\n              case HttpEventType.Response:\r\n                return event;\r\n            }\r\n          }),\r\n          tap(() => { }),\r\n          last(),\r\n          catchError((error: HttpErrorResponse) => {\r\n            file.inProgress = false;\r\n            file.canRetry = true;\r\n            return of(`${file.data.name} upload failed.`);\r\n          })\r\n        ).subscribe(\r\n          (event: any) => {\r\n            if (typeof (event) === 'object') {\r\n              this.removeFileFromArray(file);\r\n              this.complete.emit(event.body);\r\n\r\n              let header = this.authService.initAuthHeaders();\r\n        let options = { headers: header };\r\n        \r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      private removeFileFromArray(file: FileUploadModel) {\r\n        const index = this.files.indexOf(file);\r\n        if (index > -1) {\r\n          this.files.splice(index, 1);\r\n        }\r\n      }\r\n\r\n  }\r\n  export class FileUploadModel {\r\n    //customerIdentifier:string\r\n    data: File;\r\n    state: string;\r\n    inProgress: boolean;\r\n    progress: number;\r\n    canRetry: boolean;\r\n    canCancel: boolean;\r\n    sub?: Subscription;\r\n  }\r\n\r\n  export interface CustomerViewModel{\r\n    firstName:string;\r\n    id:string;\r\n    lastName:string;\r\n  }\r\n\r\n  export interface ShipViewModel{\r\n    shipName:string;\r\n    id:string;\r\n  }","module.exports = \"\\r\\n<div style=\\\"vertical-align: middle\\\">\\r\\n<div class=\\\"example-container\\\">\\r\\n        <!-- <mat-form-field>\\r\\n                <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <textarea matInput placeholder=\\\"Client Identifier\\\"></textarea>\\r\\n        </mat-form-field>-->\\r\\n        <mat-card>\\r\\n            <mat-card-title>Create Certificate</mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input [(ngModel)]=\\\"selectedCustomer\\\" type=\\\"text\\\" placeholder=\\\"Customer Name\\\" aria-label=\\\"Number\\\" matInput [matAutocomplete]=\\\"auto1\\\">\\r\\n                <mat-autocomplete #auto1=\\\"matAutocomplete\\\" [displayWith]=\\\"displayCustomer\\\">\\r\\n                  <mat-option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer\\\">\\r\\n                    {{ customer.firstName }} {{ customer.lastName }} \\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input  [(ngModel)]=\\\"selectedShip\\\" type=\\\"text\\\" placeholder=\\\"Vessel Name\\\" aria-label=\\\"Number\\\" matInput [matAutocomplete]=\\\"auto2\\\">\\r\\n                <mat-autocomplete #auto2=\\\"matAutocomplete\\\" [displayWith]=\\\"displayShipName\\\">\\r\\n                  <mat-option *ngFor=\\\"let option of ships\\\" [value]=\\\"option\\\">\\r\\n                    {{ option.shipName }}\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                  <input [(ngModel)]=\\\"selectedStartDate\\\" matInput matInput placeholder=\\\"Start Date\\\" [matDatepicker]=\\\"startDatePicker\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker  #startDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                  <input  [(ngModel)]=\\\"selectedEndDate\\\"matInput matInput placeholder=\\\"End Date\\\" [matDatepicker]=\\\"endDatePicker\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker  #endDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n        </mat-card-content>\\r\\n         <mat-card-actions>\\t\\r\\n         <button mat-button color=\\\"warn\\\" (click)=\\\"onClick()\\\">\\r\\n                <mat-icon>file_upload</mat-icon>\\r\\n                {{text}}\\r\\n         </button>\\r\\n         <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"files.length <1\\\" (click)=\\\"createCertificate()\\\">Create Certificate</button>\\r\\n              </mat-card-actions>\\r\\n              <br/>\\r\\n              <ul>\\r\\n                    <li *ngFor=\\\"let file of files\\\" [@fadeInOut]=\\\"file.state\\\">\\r\\n                      <mat-progress-bar [value]=\\\"file.progress\\\"></mat-progress-bar>\\r\\n                      <span id=\\\"file-label\\\">\\r\\n                        {{file.data.name}}\\r\\n                        <a title=\\\"Retry\\\" (click)=\\\"retryFile(file)\\\" *ngIf=\\\"file.canRetry\\\">\\r\\n                          <mat-icon>refresh</mat-icon>\\r\\n                        </a>\\r\\n                        <a title=\\\"Cancel\\\" (click)=\\\"cancelFile(file)\\\" *ngIf=\\\"file.canCancel\\\">\\r\\n                          <mat-icon>cancel</mat-icon>\\r\\n                        </a>\\r\\n                      </span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </mat-card>\\r\\n      </div>\\r\\n      <div>\\r\\n        <input type=\\\"file\\\" id=\\\"fileUpload\\\" name=\\\"fileUpload\\\" multiple=\\\"multiple\\\" accept=\\\"{{accept}}\\\" style=\\\"display:none;\\\" />\\r\\n      </div>\\r\\n    </div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 800px; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  display: flow-root !important;\\n  position: relative;\\n  text-align: left; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\"","module.exports = \"<h1>{{Title}}</h1>\\r\\n\\r\\n<mat-spinner *ngIf=\\\"isBusy\\\"></mat-spinner>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"forecasts\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!isBusy\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"customerIdentifier\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Customer Identifier </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerIdentifier}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"vesselIdentifier\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Vessel Identifier </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vesselIdentifier}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"startDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Start Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate | date:'MM/dd/yyyy, HH:mm'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"endDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> End Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endDate | date:'MM/dd/yyyy, HH:mm'}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"isValid\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Valid </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.isValid}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"button1\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> View Certificate </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n      <a mat-raised-button color=\\\"primary\\\" (click)=\\\"getCertificateById(element)\\\">View Certificate</a>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n\"","module.exports = \".content {\\n  display: inline-block; }\\n\\ntd {\\n  padding-left: 7.5px;\\n  padding-right: 7.5px;\\n  background-color: transparent;\\n  height: 40px;\\n  border: 1px transparent;\\n  width: 25%; }\\n\\ntd:first-child {\\n  padding-left: 0; }\\n\\ntd:last-child {\\n  padding-right: 0; }\\n\\ntable {\\n  width: calc(100% + 30px);\\n  table-layout: fixed;\\n  border-spacing: 15px 0px;\\n  background: transparent;\\n  margin: 0px -15px; }\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html',\r\n  styleUrls: ['./fetch-data.component.scss']\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: CertificateModel[];\r\n  displayedColumns = ['customerIdentifier', 'vesselIdentifier', 'startDate', 'endDate','button1'];\r\n  private Title: string;\r\n  private isBusy:boolean = true;\r\n  private baseUrl : string;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, \r\n              private route: ActivatedRoute, \r\n              private authService: AuthService) { \r\n    //http.get<CertificateModel[]>(baseUrl + 'api/certificate/').subscribe(result => {\r\n    //  this.forecasts = result;\r\n    //}, error => console.error(error));\r\n    this.baseUrl = baseUrl;\r\n\r\n    this.route.queryParams.subscribe(_ => {\r\n      this.isBusy = true;\r\n      if (_.username != undefined) {\r\n        let header = this.authService.initAuthHeaders();\r\n        let options = { headers: header };\r\n        this.Title = \"My Certificates\";\r\n        http.get<CertificateModel[]>(baseUrl+'api/certificate/'+_.username,options).subscribe(result => {\r\n          this.forecasts = result;\r\n          this.isBusy= false;\r\n        }, error => console.error(error)); \r\n      }\r\n      else {\r\n        this.Title = \"All Certificates\";\r\n        let header = this.authService.initAuthHeaders();\r\n        let options = { headers: header };\r\n        http.get<CertificateModel[]>(baseUrl +'api/certificate/',options).subscribe(result => {\r\n           this.forecasts = result;\r\n           this.isBusy = false;\r\n         }, error => console.error(error));\r\n      }\r\n      let header = this.authService.initAuthHeaders();\r\n        let options = { headers: header };\r\n\r\n        // http.get<number>(`${baseUrl}api/certificate/counttransaction`,options).subscribe(result => {\r\n        //     this.badgeCountService.totalTransactions.next(result);\r\n        // });\r\n    });\r\n  }\r\n\r\n  public getCertificateById = (selectedItem: CertificateModel) => {\r\n\r\n    var item = {\"CustomerIdentifier\": selectedItem.customerIdentifier, \"VesselIdentifier\": selectedItem.vesselIdentifier};\r\n    var win = window.open(`${this.baseUrl}api/certificate/download/` +selectedItem.customerIdentifier);\r\n    win.focus();\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  dateFormatted: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n interface CertificateModel {\r\n   customerIdentifier: string;\r\n   vesselIdentifier: string;\r\n   startDate: Date;\r\n   endDate: Date;\r\n}\r\n","module.exports = \"<main role=\\\"main\\\">\\r\\n  <!-- Main jumbotron for a primary marketing message or call to action -->\\r\\n  <mat-toolbar style=\\\"box-shadow: 0 1px 1px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);position: fixed;z-index: 1;\\\">\\r\\n        Microsoft Exchange Services\\r\\n\\r\\n        <h2 class=\\\"icon\\\">\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"subscribe()\\\">Subscribe</button>\\r\\n                <button mat-fab mat-fab color=\\\"\\\" class=\\\"no-hover-effect\\\">\\r\\n                        <mat-icon style=\\\"color:gray\\\">notifications</mat-icon>\\r\\n                        <b matBadge=\\\"10\\\" matBadgeColor=\\\"warn\\\"></b>\\r\\n                    </button>\\r\\n                            \\r\\n                <a mat-icon-button class=\\\"small\\\" [matMenuTriggerFor]=\\\"matmenu\\\" (click)=\\\"userClick()\\\">\\r\\n                  <mat-icon>account_circle</mat-icon>\\r\\n                  <div style=\\\"color: black\\\">{{usercontext}}</div>\\r\\n                </a>\\r\\n\\r\\n                <mat-menu #matmenu=\\\"matMenu\\\" style=\\\"margin-top: 30px\\\">\\r\\n                    <button mat-menu-item >\\r\\n                        <mat-icon>flag</mat-icon>\\r\\n                        <span>\\r\\n                            View User Profile\\r\\n                        </span>\\r\\n                    </button>\\r\\n                    <button mat-menu-item >\\r\\n                        <mat-icon>flag</mat-icon>\\r\\n                        <span>\\r\\n                            Setings\\r\\n                        </span>\\r\\n                    </button>\\r\\n                    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n                        <mat-icon>flag</mat-icon>\\r\\n                        <span>\\r\\n                            Logout\\r\\n                        </span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </h2>\\r\\n\\r\\n  </mat-toolbar>\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      \\r\\n      <h1 class=\\\"display-3\\\"></h1>\\r\\n      <div class=\\\"is-grouped\\\">\\r\\n          <!-- <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"createCertificate()\\\">Create Certificate</button> -->\\r\\n          <button style=\\\"margin-right: 10px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"startGenesis()\\\">Send Email</button>\\r\\n          <!-- <button style=\\\"margin-right: 10px\\\" mat-raised-button (click)=\\\"navigateToAllTransactions()\\\">View Ledger Transactions\\r\\n              <span style=\\\"margin-right: 10px\\\" style=\\\"margin-bottom: 5px\\\" class=\\\"badge\\\">200</span></button>\\r\\n        <button style=\\\"margin-right: 10px\\\" mat-raised-button (click)=\\\"navigateToAllCertificates()\\\">View All Certificates\\r\\n            <span style=\\\"margin-right: 10px\\\" style=\\\"margin-bottom: 5px\\\" class=\\\"badge\\\">{{totalCertificates}}</span></button>\\r\\n        <button style=\\\"margin-right: 10px\\\" mat-raised-button (click)=\\\"navigateToMyCertificates()\\\">View My Certificates\\r\\n            <span style=\\\"margin-right: 10px\\\" style=\\\"margin-bottom: 5px\\\" class=\\\"badge\\\">1</span>\\r\\n        </button>\\r\\n        <button style=\\\"margin-right: 10px\\\" mat-raised-button (click)=\\\"validateCertificate()\\\">Validate Certificate</button> -->\\r\\n        \\r\\n        <!--<a class=\\\"btn btn-primary btn-lg\\\" href=\\\"#\\\" role=\\\"button\\\">Store Certificate</a>\\r\\n        <input type=\\\"file\\\" />-->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div>\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let item of certificates\\\">\\r\\n          {{item.customerIdentifier}}\\r\\n          {{item.blockType}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","module.exports = \"/* Added to highlight spacing */\\n.is-grouped {\\n  display: inline-block;\\n  background-color: transparent;\\n  background: transparent; }\\n.is-grouped > .button:not(:last-child) {\\n  margin-right: 10px; }\\n.icon {\\n  display: inline;\\n  position: absolute;\\n  right: 60px;\\n  top: 5px; }\\n.mat-icon-button.small {\\n  width: 40px;\\n  height: 40px;\\n  color: green;\\n  line-height: 40px; }\\n.mat-icon-button.small .mat-icon, .mat-icon-button.small .mat-icon-button i {\\n    line-height: 40px; }\\n.mat-icon-button.small .mat-icon {\\n    width: 40px;\\n    height: 40px; }\\n.mat-icon-button.small .material-icons {\\n    font-size: 40px; }\\n\"","import {  Inject, Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { BadgeCountService } from '../services/badge.count.service';\r\nimport * as signalR from '@aspnet/signalr';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  \r\n  ngOnInit() {\r\n    let connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(`${this.baseUrl}exchange`)\r\n    .build();\r\n \r\nconnection.on(\"send\", data => {\r\n    console.log(data);\r\n});\r\n \r\nconnection.start()\r\n    .then(() =>{\r\n      console.log(\"Connected\")\r\n    });\r\n  }\r\n\r\n  private certificates: CertificateModel[];\r\n  private showUserProfile: boolean = false; \r\n  private usercontext : any;\r\n\r\n  constructor(private httpClient: HttpClient, \r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private authService: AuthService,\r\n    private badgeService : BadgeCountService,\r\n    private router: Router) { \r\n    // this.authService.getUserInfo$().subscribe(_ => {\r\n    //   this.usercontext = _.data.userName;\r\n    // });\r\n  }\r\n\r\n  downloadFile(data: Response) {\r\n    var blob = new Blob([data], { type: 'text/pdf' });\r\n    var url = window.URL.createObjectURL(blob);\r\n    window.open(url);\r\n  }\r\n\r\n  public userClick() : void {\r\nthis.showUserProfile = !this.showUserProfile;\r\n  }\r\n\r\n  public getAllCertificates = () => this.httpClient\r\n    .get<CertificateModel[]>(`${this.baseUrl}api/certificate`)\r\n    .subscribe(_ => this.certificates = _);\r\n\r\n  public getCertificateById = (id: string) => {\r\n    var win = window.open(`${this.baseUrl}api/certificate/1`, \"_blank\");\r\n    win.focus();\r\n  }\r\n  public navigateToMyCertificates(): void {\r\n    var username = JSON.parse(localStorage.getItem('currentUser')).username;\r\n    //var user = JSON.parse(currentUser.id).username;\r\n    this.router.navigate(['/fetch-data'], { queryParams: { username: username } });\r\n  }\r\n\r\n  public navigateToAllCertificates(): void {\r\n    this.router.navigate(['/fetch-data']);\r\n  }\r\n  public navigateToAllTransactions():void{\r\n    this.router.navigate(['/transactions']);\r\n  }\r\n\r\n  public validateCertificate(): void {\r\n    this.router.navigate(['/certificate-validator']);\r\n  }\r\n\r\n  public createCertificate(): void{\r\n    this.router.navigate(['/create-certificate']);\r\n  }\r\n\r\n  public subscribe(): void {\r\n    \r\n    let header = this.authService.initAuthHeaders();\r\n    let options = { headers: header };\r\n    let body = JSON.stringify({ \"Recipients\": \"olteanurd@gmail.com\", \"Subject\": \"Hello\",\"MessageBodyText\" : \"Hellooo\" });\r\n    this.httpClient.post<any>(`${this.baseUrl}api/Exchange/Subscribe`,options).subscribe(result => {\r\n      let res= result;\r\n     }, error => console.error(error));\r\n\r\n  }\r\n\r\n  public startGenesis(): void {\r\n\r\n    let header = this.authService.initAuthHeaders();\r\n    let options = { headers: header };\r\n    let body = JSON.stringify({ \"Recipients\": \"olteanurd@gmail.com\", \"Subject\": \"Hello\",\"MessageBodyText\" : \"Hellooo\" });\r\n    this.httpClient.post<any>(`${this.baseUrl}api/Exchange/Email`,body,options).subscribe(result => {\r\n      let res= result;\r\n     }, error => console.error(error));\r\n\r\n  };\r\n  public logout():void{\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n\r\nexport class CertificateModel {\r\n  public customerIdentifier: string;\r\n  public blockType: string;\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Inject, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from '../../../node_modules/rxjs';\nimport { MatDrawer } from '../../../node_modules/@angular/material';\n\n@Component({\n  selector: 'app-home-layout',\n  templateUrl: \"./home.layout.component.html\",\n  styleUrls: ['./home.layout.component.scss']\n})\nexport class HomeLayoutComponent implements OnInit {\n  ngOnInit(): void {\n    //this.drawer.openedChange.subscribe((o : boolean) => window.alert(`${o}`));\n  }\n  private totalTransactions: number;\n  private totalCertificates: number;\n  private myCertificates:number;\n  private isAdmin:boolean;\n  @ViewChild('drawer') drawer : MatDrawer;\n  private asd: EventEmitter<boolean> = new EventEmitter<boolean>();\nconstructor(private router: Router,\n            private http: HttpClient,\n            @Inject('BASE_URL') private baseUrl: string,\n            private authService : AuthService){\n\n              let header = this.authService.initAuthHeaders();\n              let options = { headers: header };\n\n             // authService.isAdmin().subscribe(_ => this.isAdmin = _);\n\n              \n              // this.http\n              //     .get<number>(`${this.baseUrl}api/certificate/counttransaction`,options)\n              //     .subscribe(result => this.totalTransactions = result);\n\n              // this.http\n              //     .get<number>(`${this.baseUrl}api/certificate/countcertificates`,options)\n              //     .subscribe(result => this.totalCertificates = result);\n\n              // this.http.get<number>(`${this.baseUrl}api/certificate/countusercertificates`,options).subscribe(result => {\n              //     this.myCertificates = result;\n              //     }, error => console.error(error)); \n}\n\npublic navigateToMyCertificates() {\n  // this.authService.getUserInfo$().subscribe(_ => {\n\n  //   this.router.navigate(['/fetch-data'], { queryParams: { username: _.data.userId } })\n  //});\n}\n\npublic onOpen(){\n\n  let header = this.authService.initAuthHeaders();\n  let options = { headers: header };\n\n}\n\n}\n","module.exports = \"\\r\\n<mat-drawer-container class=\\\"example-container\\\"  autosize>\\r\\n    <mat-drawer #drawer class=\\\"custom-sidenav\\\" mode=\\\"side\\\" (opened)=\\\"onOpen()\\\">\\r\\n        <div>\\r\\n      <button routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"\\r\\n       style=\\\"margin-top: 50px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n        <mat-icon style=\\\"color: red\\\">home</mat-icon>\\r\\n      <b style=\\\"margin-left: 20px\\\">Home</b>\\r\\n      </button>\\r\\n    </div>\\r\\n     <div>\\r\\n      <button routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\" style=\\\"margin-top: 20px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n        <mat-icon style=\\\"color:gray\\\">perm_identity</mat-icon>\\r\\n        <b style=\\\"margin-left: 10px\\\">Users</b>\\r\\n      </button>\\r\\n    </div> \\r\\n      <!-- <div *ngIf=\\\"isAdmin\\\">\\r\\n            <button routerLink=\\\"/fetch-data\\\" routerLinkActive=\\\"active\\\" style=\\\"margin-top: 20px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n                <mat-icon  matBadge=\\\"{{totalCertificates}}\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\"  style=\\\"color:gray;\\\">description</mat-icon>\\r\\n              <b style=\\\"margin-left: 20px\\\">Certificates</b>\\r\\n              </button>\\r\\n      </div>\\r\\n      <div>\\r\\n            <button (click)=\\\"navigateToMyCertificates()\\\"  routerLinkActive=\\\"active\\\" style=\\\"margin-top: 20px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n                <mat-icon  matBadge=\\\"{{myCertificates}}\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\"  style=\\\"color:gray\\\">description</mat-icon>\\r\\n              <b style=\\\"margin-left: 20px\\\">My Certificates</b>\\r\\n              </button>\\r\\n      </div>\\r\\n      <div>\\r\\n            <button routerLink=\\\"/certificate-validator\\\" routerLinkActive=\\\"active\\\" style=\\\"margin-top: 20px\\\" mat-button class=\\\"small\\\" (click)=\\\"showFiller = !showFiller\\\" >\\r\\n                <mat-icon  style=\\\"color:black\\\">check</mat-icon>\\r\\n              <b style=\\\"margin-left: 20px\\\">Validate Certificate</b>\\r\\n              </button>\\r\\n      </div> -->\\r\\n    </mat-drawer>\\r\\n  \\r\\n    <div class=\\\"example-sidenav-content\\\">\\r\\n            <h2>\\r\\n                    <a mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n                            <mat-icon style=\\\"color: gray\\\">menu</mat-icon>\\r\\n                        </a>\\r\\n            </h2>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </mat-drawer-container> \\r\\n   \"","module.exports = \".example-sidenav-content {\\n  display: flex;\\n  height: 2000px;\\n  align-items: flex-start;\\n  justify-content: flex-start; }\\n\\n.custom-sidenav {\\n  padding: 20px;\\n  height: 100%;\\n  background: whitesmoke; }\\n\"","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n\\r\\n.example-events {\\r\\n    width: 300px;\\r\\n    height: 200px;\\r\\n    overflow: auto;\\r\\n    border: 1px solid #555;\\r\\n  }\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<div class='main-nav'>\\r\\n  <div class='navbar navbar-inverse'>\\r\\n    <div class='navbar-header'>\\r\\n      <a class='navbar-brand' [routerLink]='[\\\"/\\\"]'>Block Chain</a>\\r\\n    </div>\\r\\n    <div class='clearfix'></div>\\r\\n    <div class='navbar-collapse collapse' [ngClass]='{ \\\"in\\\": isExpanded }'>\\r\\n      <ul class='nav navbar-nav'>\\r\\n        <li [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n          <a [routerLink]='[\\\"/\\\"]' (click)='collapse()'>\\r\\n            <span class='glyphicon glyphicon-home'></span> Home\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- <mat-sidenav-container class=\\\"example-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" [routerLink]='[\\\"/\\\"]' [(opened)]=\\\"opened\\\" (opened)=\\\"events.push('open!')\\\"\\r\\n    (closed)=\\\"events.push('close!')\\\">\\r\\nSidenav content\\r\\n</mat-sidenav>\\r\\n<mat-sidenav-content>\\r\\n    <p><mat-checkbox [(ngModel)]=\\\"opened\\\">sidenav.opened</mat-checkbox></p>\\r\\n    <p><button mat-button (click)=\\\"sidenav.toggle()\\\">sidenav.toggle()</button></p>\\r\\n    <p>Events:</p>\\r\\n    <div class=\\\"example-events\\\">\\r\\n      <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>  -->\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class BadgeCountService {\r\n\r\n    public totalTransactions : Subject<number> = new Subject<number>();\r\n    public totalCertificates : Subject<number> = new Subject<number>();\r\n    public myCertificates : Subject<number> = new Subject<number>();\r\n}","module.exports = \"<h1>{{Title}}</h1>\\r\\n\\r\\n<mat-spinner *ngIf=\\\"isBusy\\\"></mat-spinner>\\r\\n<div class=\\\"content\\\">\\r\\n        <form class=\\\"example-form\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Block Type\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\r\\n                  <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                    <mat-option (click)=\\\"getTransactionByType(state)\\\" *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.name\\\">\\r\\n                      <span>{{ state }}</span> |\\r\\n                      <small>Block Type: {{state}}</small>\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n                </mat-form-field>\\r\\n                <br />\\r\\n              </form>\\r\\n<table mat-table [dataSource]=\\\"transactions\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!isBusy\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"blockType\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Block Type </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.blockType}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"created\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Creation Time </th>\\r\\n    <td  mat-cell *matCellDef=\\\"let element\\\"> {{element.created | date:'MM/dd/yyyy, HH:mm'}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"button1\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Transaction Details </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n      <a mat-raised-button color=\\\"primary\\\" (click)=\\\"viewTransactionDetails(element)\\\">View Transaction Info</a>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n</div>\"","module.exports = \".content {\\n  display: inline-block; }\\n\\ntd {\\n  padding-left: 7.5px;\\n  padding-right: 7.5px;\\n  background-color: transparent;\\n  height: 40px;\\n  border: 1px transparent;\\n  width: 25%; }\\n\\ntd:first-child {\\n  padding-left: 0; }\\n\\ntd:last-child {\\n  padding-right: 0; }\\n\\ntable {\\n  width: calc(100% + 30px);\\n  table-layout: fixed;\\n  border-spacing: 15px 0px;\\n  background: transparent;\\n  margin: 0px -15px; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.mat-elevation-z8 {\\n  overflow: hidden;\\n  margin: 0 auto; }\\n\"","module.exports = \"<h2 mat-dialog-title>Transaction Details for Transaction {{data.result.id}}</h2>\\r\\n\\r\\n<div class=\\\"example-container\\\">\\r\\n        <mat-form-field  class=\\\"example-full-width\\\">\\r\\n          <input  [(ngModel)]=\\\"data.result.from\\\" readonly=true matInput placeholder=\\\"Source\\\">\\r\\n        </mat-form-field>\\r\\n      <mat-icon>arrow_right_alt</mat-icon>\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n           <input [(ngModel)]=\\\"data.result.to\\\" readonly=true matInput placeholder=\\\"Target\\\" value=\\\"Test\\\">\\r\\n        </mat-form-field>\\r\\n</div>\\r\\n\"","module.exports = \".example-full-width {\\n  width: 100%; }\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material';\r\n\r\n\r\n\r\n  export class State {\r\n    constructor(public name: string, public population: string, public flag: string) { }\r\n  }\r\n  @Component({\r\n    selector: 'app-transactions',\r\n    templateUrl: './app-transactions.component.html',\r\n    styleUrls: ['./app-transactions.component.scss']\r\n  })\r\n  export class TransactionsComponent {\r\n\r\n    public transactions: TransactionViewModel[];\r\n    private Title:string;\r\n    private http:HttpClient;\r\n    private isBusy:boolean = true;\r\n    stateCtrl: FormControl;\r\n  filteredStates: Observable<any[]>;\r\n\r\n  states: string[] = [\r\n    \r\n  ];\r\n\r\n    displayedColumns = ['blockType','created','button1'];\r\n    constructor(http: HttpClient, @Inject('BASE_URL') private baseUrl: string, \r\n                private route: ActivatedRoute,private dialog: MatDialog) {\r\n\r\n        this.stateCtrl = new FormControl();\r\n        this.http = http;\r\n        \r\n        this.route.queryParams.subscribe(_ => {\r\n              this.Title = \"Transactions\";\r\n              http.get<TransactionViewModel[]>(`${this.baseUrl}api/certificate/Transaction`)\r\n                  .subscribe(result => {\r\n                 this.transactions = result;\r\n                 this.isBusy = false;\r\n                 var s =[];\r\n                 this.transactions.forEach(_ => s.push(_.blockType));\r\n                 this.states = Array.from(new Set(s));\r\n                // this.filteredStates(this.states);\r\n                this.filteredStates = this.stateCtrl.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(state => state ? this.filterStates(state) : this.states.slice()));\r\n               }, error => console.error(error));\r\n            });\r\n            \r\n    }\r\n\r\n     formatDate(date) {\r\n         debugger;\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        var strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \"  \" + strTime;\r\n      }\r\n\r\n    filterStates(name: string) {\r\n        return this.states.filter(state =>\r\n          state.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n      }\r\n\r\n      public viewTransactionDetails(selectedCertificate :TransactionViewModel): void {\r\n        let dialogRef = this.dialog.open(TransactionDetailsDialogComponent,{\r\n          data:{\r\n            result :selectedCertificate\r\n          }\r\n        });\r\n      }\r\n\r\n      getTransactionByType(state) : void {\r\n          this.isBusy = true;\r\n        this.http.get<TransactionViewModel[]>(`${this.baseUrl}api/certificate/transaction/`+state).subscribe(result => {\r\n        this.transactions = result;\r\n        this.isBusy = false;\r\n      }, error => console.error(error));\r\n      }\r\n  }\r\n\r\n  export class TransactionViewModel{\r\n        public blockType : string;\r\n        public from: string;\r\n        public to:string;\r\n        public created : Date\r\n  }\r\n\r\n  @Component({\r\n    selector: 'dialog-data-example-dialog',\r\n    templateUrl:'./dialog-overview-transaction-dialog.html',\r\n    styleUrls: ['./dialog-overview-transaction-dialog.scss']\r\n  })\r\n  export class TransactionDetailsDialogComponent {\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n  }","module.exports = \"<mat-toolbar style=\\\"box-shadow: 0 1px 1px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);position: fixed;z-index: 1;\\\">\\r\\n    {{Title}}\\r\\n    </mat-toolbar>\\r\\n\\r\\n<mat-spinner *ngIf=\\\"isBusy\\\"></mat-spinner>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"users\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!isBusy\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"userName\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> UserName </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userName}}</td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"email\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}}</td>\\r\\n                  </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\"","module.exports = \".content {\\n  display: inline-block; }\\n\\ntd {\\n  padding-left: 7.5px;\\n  padding-right: 7.5px;\\n  background-color: transparent;\\n  height: 40px;\\n  border: 1px transparent;\\n  width: 25%; }\\n\\ntable {\\n  width: calc(100% + 30px);\\n  table-layout: fixed;\\n  border-spacing: 15px 0px;\\n  background: transparent; }\\n\"","import {  Inject, Component } from '@angular/core';\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n @Component({\r\n    selector: 'app-transactions',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.scss']\r\n  })\r\n\r\n  export class UsersComponent {\r\n\r\n    private isBusy= true;\r\n    private users : IUser[];\r\n    private displayedColumns = ['userName','email'];\r\n    private Title = \"Users\";\r\n\r\n    constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, \r\n    private route: ActivatedRoute, \r\n    private authService: AuthService)\r\n    {\r\n        let header = this.authService.initAuthHeaders();\r\n        let options = { headers: header };\r\n        http.get<IUser[]>(baseUrl +'api/user/users',options).subscribe(result => {\r\n           this.users = result;\r\n           this.isBusy = false;\r\n         }, error => console.error(error));\r\n    }\r\n  }\r\n\r\n\r\n  export interface IUser{\r\n      id:string;\r\n       email: string;\r\n       userName : string;\r\n  }","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return  \"/\";\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}